language: generic
os: osx

env:
  global:
    # Branch (or any remote ref, i.e. pull/10/head) to fetch
    - BUILD_BRANCH=master
    # Commit tag/ref to checkout
    - BUILD_COMMIT=3.24.0

    # If set to non empty value then Orange3 is build from the checked-out
    # sources otherwise it is installed from PyPI (assuming BUILD_COMMIT
    # is the version tag)
    - BUILD_LOCAL=

cache:
  ccache: true
  directories:
    - ~/Library/Caches/pip
    # cache used by build-macos-app.sh
    - ~/.cache/pkgs

before_install:
  - git clone -q https://github.com/biolab/orange3.git
  - cd orange3
  - git fetch origin $BUILD_BRANCH
  - git checkout $BUILD_COMMIT

install:
  - APP=/Applications/Orange3.app
  - if [[ -d $APP ]]; then rm -rf $APP; fi
  - |-
    if [[ $BUILD_LOCAL ]]; then
        PIP_ARGS=( --pip-arg={-r,../specs/macos/requirements.txt,./} );
    else
        PIP_ARGS=( --pip-arg={--no-dependencies, Orange3==$BUILD_COMMIT} );
    fi
  - |-
    ./scripts/macos/build-macos-app.sh "${PIP_ARGS[@]}" --python-version=3.6.8 "$APP"
  - |-
    ./scripts/macos/create-dmg-installer.sh --app "$APP" dist/Orange3.dmg
  - |-
    VERSION=$("$APP/Contents/MacOS/pip" show orange3 | grep -E '^Version: ' | cut -d ' ' -f 2)
  - mv dist/Orange3.dmg dist/Orange3-$VERSION.dmg
  - cd ..

script:
  # run the tests in the application's environment, but move it to a different
  # location first
  - mkdir -p ~/Applications
  - mv -f $APP ~/Applications/
  - APP=( ~/Applications/Orange3.app )
  - $APP/Contents/MacOS/python --version
  - $APP/Contents/MacOS/pip --version
  - $APP/Contents/MacOS/pip freeze

after_success:
  - shasum -a 256 orange3/dist/Orange3-$VERSION.dmg
  - echo $(curl -fS -F"file=@orange3/dist/Orange3-$VERSION.dmg" https://file.io)
